AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS Three-Tier Web Architecture - Database Tier'

Parameters:
  EnvironmentName:
    Description: Environment name that will be prefixed to resource names
    Type: String
    Default: ThreeTierDemo
  
  DBInstanceClass:
    Description: Database instance class
    Type: String
    Default: db.t3.small
    AllowedValues:
      - db.t3.small
      - db.t3.medium
      - db.r5.large
      - db.r5.xlarge
  
  DBName:
    Description: Database name
    Type: String
    Default: webappdb
  
  DBUsername:
    Description: Database admin username
    Type: String
    NoEcho: true
  
  DBPassword:
    Description: Database admin password
    Type: String
    NoEcho: true
    MinLength: 8
  
  DBBackupRetentionPeriod:
    Description: The number of days to keep automated backups
    Type: Number
    Default: 7
    MinValue: 1
    MaxValue: 35

Resources:
  # Aurora MySQL Cluster
  AuroraDBCluster:
    Type: AWS::RDS::DBCluster
    DeletionPolicy: Snapshot
    Properties:
      Engine: aurora-mysql
      EngineVersion: 8.0.mysql_aurora.3.04.0
      DatabaseName: !Ref DBName
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      DBSubnetGroupName: 
        Fn::ImportValue: !Sub ${EnvironmentName}-DBSubnetGroup
      VpcSecurityGroupIds:
        - Fn::ImportValue: !Sub ${EnvironmentName}-DBTierSG
      BackupRetentionPeriod: !Ref DBBackupRetentionPeriod
      StorageEncrypted: true
      DeletionProtection: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-AuroraCluster

  # Primary DB Instance
  AuroraPrimaryInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      Engine: aurora-mysql
      DBClusterIdentifier: !Ref AuroraDBCluster
      DBInstanceClass: !Ref DBInstanceClass
      DBSubnetGroupName:
        Fn::ImportValue: !Sub ${EnvironmentName}-DBSubnetGroup
      PubliclyAccessible: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-AuroraPrimary

  # Replica DB Instance
  AuroraReplicaInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      Engine: aurora-mysql
      DBClusterIdentifier: !Ref AuroraDBCluster
      DBInstanceClass: !Ref DBInstanceClass
      DBSubnetGroupName:
        Fn::ImportValue: !Sub ${EnvironmentName}-DBSubnetGroup
      PubliclyAccessible: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-AuroraReplica

  # Secret for database credentials
  DBSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${EnvironmentName}-db-credentials
      Description: !Sub "Aurora MySQL credentials for ${EnvironmentName}"
      SecretString: !Sub '{"username":"${DBUsername}","password":"${DBPassword}","host":"${AuroraDBCluster.Endpoint.Address}","port":"3306","dbname":"${DBName}"}'
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-DBSecret

Outputs:
  AuroraClusterEndpoint:
    Description: Aurora Cluster Endpoint
    Value: !GetAtt AuroraDBCluster.Endpoint.Address
    Export:
      Name: !Sub ${EnvironmentName}-AuroraClusterEndpoint

  AuroraClusterReadEndpoint:
    Description: Aurora Cluster Read Endpoint
    Value: !GetAtt AuroraDBCluster.ReadEndpoint.Address
    Export:
      Name: !Sub ${EnvironmentName}-AuroraClusterReadEndpoint

  DBSecretARN:
    Description: ARN of the database credentials secret
    Value: !Ref DBSecret
    Export:
      Name: !Sub ${EnvironmentName}-DBSecretARN